// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
}

model Printer {
  id          Int      @id @default(autoincrement())
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int      @unique
  serial      String   @unique
  name        String
  description String?
  busy        Boolean
  Booking     Booking?
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  fee     Int
  Printer Printer?
}

model Booker {
  id        Int      @id @default(autoincrement())
  name      String
  address   String   @default("1086 Budapest, Vas utca 1.")
  taxnumber String   @default("1234567812345678")
  phone     String   @default("+36 00 0000000")
  email     String   @unique
  Booking   Booking?
}

model Booking {
  id        Int        @id @default(autoincrement())
  booker    Booker     @relation(fields: [bookerId], references: [id])
  bookerId  Int        @unique
  printer   Printer    @relation(fields: [printerId], references: [id])
  printerId Int        @unique
  createdAt DateTime   @default(now())
  discount  Int        @default(0)
  Worksheet Worksheet?
}

model Service {
  id        Int        @id @default(autoincrement())
  name      String
  Worksheet Worksheet?
}

model Worksheet {
  id                 Int             @id @default(autoincrement())
  booking            Booking         @relation(fields: [bookingId], references: [id])
  bookingId          Int             @unique
  service            Service         @relation(fields: [serviceId], references: [id])
  serviceId          Int             @unique
  errorReportingTime DateTime        @default(now())
  repairDeadline     DateTime        @default(dbgenerated("(now() + '2 days'::interval)"))
  status             WorksheetStatus @default(IN_PROGRESS)
}

enum WorksheetStatus {
  IN_PROGRESS
  DONE
}
